{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","App.module.css"],"names":["module","exports","Cards","props","console","log","data","confirmed","lastUpdate","Date","toDateString","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","recovered","deaths","url","fetchAmountData","country","a","url2","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountriesData","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChar","options","legend","display","title","text","CountryPicker","fetchedCountries","setFetchedCountries","fetchC","FormControl","formControl","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","option","i","key","App","state","fetchedData","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,oOCmEpJC,EA9DD,SAACC,GACXC,QAAQC,IAAIF,EAAMG,KAAKC,WACvB,IAAMC,EAAa,IAAIC,KAAMN,EAAMG,KAAKE,YAAYE,eAGpD,OAAIP,EAAMG,KAAKC,UAKX,yBAAKI,UAAWC,IAAOC,WACnB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAChC,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WACzE,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAK5B,EAAMG,KAAKC,UAAUyB,MAC1BC,SAhBhB,EAiBgBC,UAAU,OAElB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiBnB,KAK3C,kBAACM,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOuB,YACzE,kBAACV,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAK5B,EAAMG,KAAK6B,UAAUH,MAC1BC,SA/BhB,EAgCgBC,UAAU,OAElB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiBnB,KAM3C,kBAACM,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAGV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOwB,SACzE,kBAACX,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAChB,kBAAC,IAAD,CACIC,MAAO,EACPC,IAAK5B,EAAMG,KAAK8B,OAAOJ,MACvBC,SA/ChB,EAgDgBC,UAAU,OAElB,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiBnB,OA/C5C,c,yBCVT6B,EAAM,iCAGCC,EAAe,uCAAG,WAAMC,GAAN,2BAAAC,EAAA,6DAEvBC,EAAOJ,EACRE,IACCE,EAAI,UAAMJ,EAAN,sBAAuBE,IAJJ,kBAc8CG,IAAMC,IAAIF,GAdxD,2BAcfnC,KAASC,EAdM,EAcNA,UAAW4B,EAdL,EAcKA,UAAWC,EAdhB,EAcgBA,OAAQ5B,EAdxB,EAcwBA,WAdxB,kBAgBhB,CAACD,YAAW4B,YAAUC,SAAQ5B,eAhBd,kCAkBvBJ,QAAQC,IAAR,MAlBuB,0DAAH,sDAsBfuC,EAAc,uCAAG,gCAAAJ,EAAA,+EAECE,IAAMC,IAAN,UAAaN,EAAb,WAFD,uBAEd/B,EAFc,EAEdA,KAEFuC,EAAevC,EAAKwC,KAAI,SAAAC,GAAS,MAAK,CACxCxC,UAAWwC,EAAUxC,UAAUyC,MAC/BZ,OAAQW,EAAUX,OAAOY,MACzBC,KAAMF,EAAUG,eAGpB9C,QAAQC,IAAI,aAVU,kBAYfwC,GAZe,kCActBzC,QAAQC,IAAR,MAdsB,0DAAH,qDAkBd8C,EAAkB,uCAAG,8BAAAX,EAAA,+EAEWE,IAAMC,IAAN,UAAaN,EAAb,eAFX,uBAEVe,EAFU,EAElB9C,KAAQ8C,UAChBhD,QAAQC,IAAI+C,GAHc,kBAInBA,EAAUN,KAAI,SAACP,GAAD,OAAWA,EAAQc,SAJd,gCAM1BjD,QAAQC,IAAR,MAN0B,yDAAH,qD,yBCsBhBiD,EA9DD,SAAC,GAAuD,IAAD,IAApDhD,KAAOC,EAA6C,EAA7CA,UAAW4B,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,OAASG,EAAc,EAAdA,QAAc,EAE/BgB,mBAAS,IAFsB,mBAE1DR,EAF0D,KAE/CS,EAF+C,KAIjEC,qBAAU,WACN,IAAMC,EAAQ,uCAAG,sBAAAlB,EAAA,kEACbgB,EADa,SACMZ,IADN,6EAAH,qDAIdxC,QAAQC,IAAI,UACZqD,MACD,CAACF,IAEJ,IAAMG,EACmB,IAArBZ,EAAUa,OAEL,kBAAC,IAAD,CACGtD,KAAM,CACFuD,OAAQd,EAAUD,KAAI,qBAAGG,QACzBa,SAAU,CAAC,CACPxD,KAAMyC,EAAUD,KAAI,qBAAGvC,aACvBwD,MAAO,WACPC,YAAa,UACbC,MAAM,GACP,CACC3D,KAAMyC,EAAUD,KAAI,qBAAGV,UACvB2B,MAAO,SACPC,YAAa,MACbE,gBAAiB,oBACjBD,MAAM,OAGZ,KAEd7D,QAAQC,IAAIE,EAAW4B,EAAWC,GAClC,IAAM+B,EACF5D,EAEI,kBAAC,IAAD,CACID,KAAM,CACFuD,OAAQ,CAAC,WAAY,YAAa,UAClCC,SAAU,CAAC,CACPC,MAAO,SACPG,gBAAiB,CAAC,oBAAoB,sBAAsB,qBAC5D5D,KAAK,CAACC,EAAUyB,MAAOG,EAAUH,MAAOI,EAAOJ,UAGvDoC,QAAS,CACLC,OAAQ,CAACC,SAAS,GAClBC,MAAO,CAACD,SAAS,EAAME,KAAK,GAAD,OAAKjC,OAGxC,KAGR,OACI,yBAAK5B,UAAWC,IAAOC,WAClB0B,EAAS4B,EAAUR,I,mCC5BjBc,EA7BO,SAACtE,GAAW,IAAD,EAEmBoD,mBAAS,IAF5B,mBAEtBmB,EAFsB,KAEJC,EAFI,KAa7B,OATAlB,qBAAU,YACM,uCAAG,sBAAAjB,EAAA,kEACXmC,EADW,SACexB,IADf,6EAAH,qDAGZyB,KACD,CAACD,IAEJvE,QAAQC,IAAIqE,GAGR,kBAACG,EAAA,EAAD,CAAalE,UAAWC,IAAOkE,aAC3B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAO/E,EAAMgF,oBAAoBD,EAAEE,OAAOpD,SAC9E,4BAAQrB,UAAWC,IAAOyE,OAAQrD,MAAM,IAAxC,UACC0C,EAAiB5B,KAAI,SAACP,EAAS+C,GAAV,OAClB,4BACI3E,UAAWC,IAAOyE,OAClBE,IAAKD,EACLtD,MAAOO,GACNA,S,iBCiBViD,E,4MAnCbC,MAAQ,CACNnF,KAAM,GACNiC,QAAS,I,EAUX4C,oB,uCAAsB,WAAO5C,GAAP,eAAAC,EAAA,sEACMF,EAAgBC,GADtB,OACdmD,EADc,OAEpB,EAAKC,SAAS,CAAErF,KAAMoF,EAAanD,QAASA,IAC5CnC,QAAQC,IAAIqF,GAHQ,2C,wPALMpD,I,OAApBoD,E,OACNtF,QAAQC,IAAIqF,GACZE,KAAKD,SAAS,CAAErF,KAAMoF,I,qIAWtBtF,QAAQC,IAAI,OADL,MAEmBuF,KAAKH,MAAvBnF,EAFD,EAECA,KAAMiC,EAFP,EAEOA,QAEd,OACE,yBAAK5B,UAAWC,IAAOC,WACrB,gDACA,kBAAC,EAAD,CAAOP,KAAMA,IACb,kBAAC,EAAD,CAAe6E,oBAAqBS,KAAKT,sBACzC,kBAAC,EAAD,CAAO7E,KAAMA,EAAMiC,QAASA,S,GA9BlBsD,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCLjDlG,EAAOC,QAAU,CAAC,YAAc,mCAAmC,OAAS,gC,mBCA5ED,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.fd0398e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2yYDY\",\"card\":\"Cards_card__GjWgh\",\"infected\":\"Cards_infected__WXlgY\",\"recovered\":\"Cards_recovered__RjFry\",\"deaths\":\"Cards_deaths__2PArT\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core'\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\nconst Cards = (props) => {\n    console.log(props.data.confirmed)\n    const lastUpdate = new Date (props.data.lastUpdate).toDateString()\n    const dur = 2;\n\n    if(!props.data.confirmed){\n        return 'Loading...'\n    }\n    // { confirmed, recovered, deaths, lastUpdate }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography varaint=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={props.data.confirmed.value}\n                                duration={dur}\n                                separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{lastUpdate}</Typography>\n                    </CardContent>\n                </Grid>\n\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography varaint=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={props.data.recovered.value}\n                                duration={dur}\n                                separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{lastUpdate}</Typography>\n                    </CardContent>\n                </Grid>\n\n\n\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                        <Typography varaint=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={props.data.deaths.value}\n                                duration={dur}\n                                separator=\",\"/>\n                        </Typography>\n                        <Typography color=\"textSecondary\">{lastUpdate}</Typography>\n                    </CardContent>\n                </Grid>\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api';\n\n\nexport const fetchAmountData = async(country) => {\n\n    let url2 = url;\n    if(country){\n        url2 = `${url}/countries/${country}`\n    }\n    try{\n        // const { data } = await axios.get(url);\n        // const modifyData = {\n        //     confirmed: data.confirmed,\n        //     recovered: data.recovered,\n        //     deaths: data.deaths,\n        //     lastUpdate: data.lastUpdate\n        // }\n        const { data : { confirmed, recovered, deaths, lastUpdate }} = await axios.get(url2);\n\n        return {confirmed, recovered,deaths, lastUpdate};\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try{\n        const { data } = await axios.get(`${url}/daily`)\n\n        const modifiedData = data.map(dailyData => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n        // console.log(data)\n        console.log(\"API fetch\")\n        // console.log(modifiedData)\n        return modifiedData\n    }catch(error){\n        console.log(error)\n    }\n}\n\nexport const fetchCountriesData = async () =>{\n    try{\n        const { data: { countries }} = await axios.get(`${url}/countries`);\n        console.log(countries);\n        return countries.map((country)=>country.name)\n    }catch(error){\n        console.log(error)\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData, fetchCountriesData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2'\nimport styles from './Chart.module.css'\n\nconst Chart = ({ data: {confirmed, recovered, deaths}, country }) => {\n    //hook\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        // console.log(\"Chart: \" + dailyData)\n        console.log(\"Charts\")\n        fetchAPI()\n    }, [setDailyData]);\n\n    const lineChart = (\n        dailyData.length !== 0\n            ?\n            (<Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: 'Infected',\n                        borderColor: '#3333FF',\n                        fill: true\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: 'Deaths',\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255,0,0,0.5)',\n                        fill: true\n                    }],\n                }}\n            />) : null\n    );\n    console.log(confirmed, recovered, deaths)\n    const barChar = (\n        confirmed\n        ?(\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: ['rgba(0,0,225,0.5)','rgba(0,225,225,0.5)','rgba(225,0,0,0.5)'],\n                        data:[confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: {display: false},\n                    title: {display: true, text: `${country}`}\n                }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country? barChar : lineChart}\n        </div>\n    )\n}\n\nexport default Chart","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core'\nimport styles from './CountryPicker.module.css'\nimport { fetchCountriesData } from '../../api'\n\nconst CountryPicker = (props) => {\n\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchC = async () => {\n            setFetchedCountries(await fetchCountriesData())\n        }\n        fetchC();\n    }, [setFetchedCountries])\n\n    console.log(fetchedCountries)\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => props.handleCountryChange(e.target.value)}>\n                <option className={styles.option} value=\"\">Global</option>\n                {fetchedCountries.map((country, i) =>\n                    <option\n                        className={styles.option}\n                        key={i}\n                        value={country}>\n                        {country}\n                    </option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker","import React from 'react';\n// import Cards from './components/Cards'\n// import Chart from './components/Chart'\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css'\nimport { fetchAmountData } from './api' //immediatelly search for index.js\n\nclass App extends React.Component {\n\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() { //special  for componentDidMount\n    //usually func async ()\n    const fetchedData = await fetchAmountData();\n    console.log(fetchedData);\n    this.setState({ data: fetchedData });\n  }\n\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchAmountData(country);\n    this.setState({ data: fetchedData, country: country })\n    console.log(fetchedData)\n    //fetchData, setState\n  }\n\n  render() {\n    console.log(\"APP\");\n    const { data, country } = this.state; //destructuring\n\n    return (\n      <div className={styles.container}>\n        <h1>COVID-19 Tracker</h1>\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1cTV9\",\"option\":\"CountryPicker_option__3Kle-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2-Sph\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1wwat\"};"],"sourceRoot":""}